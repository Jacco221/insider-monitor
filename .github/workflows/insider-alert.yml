name: Insider Alerts (WhatsApp)

on:
  workflow_dispatch: {}   # <-- hierdoor zie je én kun je 'Run workflow' gebruiken
  schedule:
    - cron: "*/30 * * * *"  # elke 30 minuten

jobs:
  alert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installeer dependencies (requirements + runtime)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install twilio pyyaml

      - name: (optioneel) config.local.yaml bijwerken met user-agent secret
        if: ${{ secrets.SEC_USER_AGENT != '' }}
        run: |
          python - <<'PY'
          import os, yaml, pathlib
          p = pathlib.Path('config.local.yaml')
          cfg = {}
          if p.exists():
              with p.open('r') as f:
                  cfg = yaml.safe_load(f) or {}
          ua = os.getenv('SEC_USER_AGENT')
          if ua:
              cfg.setdefault('user_agent', {})['ua'] = ua
              with p.open('w') as f:
                  yaml.safe_dump(cfg, f, sort_keys=False, allow_unicode=True)
              print("config.local.yaml bijgewerkt")
          PY

      - name: Zoek scripts-map (auto-discover)
        id: find_scripts
        run: |
          set -euo pipefail
          # kandidaten in volgorde:
          for d in scripts insider-monitor/src src; do
            if [ -d "$d" ]; then
              echo "prefix=$d" >> $GITHUB_OUTPUT
              break
            fi
          done
          echo "Gevonden prefix: '${{ steps.find_scripts.outputs.prefix || '' }}'"

      - name: Draai insider pipeline (dummy run ok)
        run: |
          set -euo pipefail
          PFX="${{ steps.find_scripts.outputs.prefix }}"
          if [ -z "${PFX}" ]; then
            echo "Kon scripts/* niet vinden in ., insider-monitor of src"
            exit 1
          fi
          echo "== Inhoud van ${PFX} =="
          ls -la "${PFX}"
          echo "== Try run =="
          python "${PFX}/fetch_insiders.py" || true
          python "${PFX}/score_signals.py" || true
          python "${PFX}/fetch_news.py"   || true
          python "${PFX}/report_builder.py" || true
          echo "DONE (dummy run toegestaan)"

      - name: Detecteer nieuwe signalen & bouw samenvatting
        id: build_report
        run: |
          set -euo pipefail
          # Dummy: maak altijd een korte samenvatting
          SUMMARY="✅ Insider Monitor: dummy samenvatting (placeholder)"
          echo "summary=${SUMMARY}" >> $GITHUB_OUTPUT

      - name: Verstuur WhatsApp via Twilio (alleen bij alert)
        if: ${{ steps.build_report.outputs.summary != '' && secrets.TWILIO_ACCOUNT_SID != '' && secrets.TWILIO_AUTH_TOKEN != '' && secrets.ALERT_TO_INSIDER != '' }}
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN:  ${{ secrets.TWILIO_AUTH_TOKEN }}
          ALERT_TO_INSIDER:   ${{ secrets.ALERT_TO_INSIDER }}
        run: |
          python - <<'PY'
          import os, sys
          from twilio.rest import Client

          sid   = os.getenv("TWILIO_ACCOUNT_SID")
          token = os.getenv("TWILIO_AUTH_TOKEN")
          to    = os.getenv("ALERT_TO_INSIDER")
          body  = os.getenv("BODY") or "Insider Monitor test (GitHub Actions)."

          if not sid or not token or not to:
              print("❌ Secrets ontbreken (SID/TOKEN/TO)")
              sys.exit(1)

          client = Client(sid, token)
          msg = client.messages.create(
              from_="whatsapp:+14155238886",   # Twilio sandbox
              to=to,
              body=body,
          )
          print("✅ WhatsApp verstuurd, SID:", msg.sid)
          PY
        env:
          BODY: ${{ steps.build_report.outputs.summary }}

      # (optioneel) upload rapporten als artifact
      - name: Upload rapporten (optioneel)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/**
            reports/**
            **/reports/**

