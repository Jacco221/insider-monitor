name: Insider Alerts (WhatsApp)

on:
  workflow_dispatch: {}        # <-- hierdoor verschijnt "Run workflow" in Actions
  schedule:
    - cron: "*/30 * * * *"     # elke 30 minuten

jobs:
  alert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installeer minimale deps
        run: |
          python -m pip install --upgrade pip
          pip install twilio

      - name: Debug: laat repo zien
        run: |
          echo "== Top-level =="
          ls -la
          echo "== data/reports =="
          ls -la data/reports || true
          echo "== Recente insider_signals_* =="
          ls -1t data/reports/*insider_signals*.csv 2>/dev/null | head -n 5 || true

      - name: Detecteer nieuwe signalen & bouw bericht
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          REPORT=$(ls -1t data/reports/*insider_signals*.csv 2>/dev/null | head -n 1 || true)
          echo "report=$REPORT" >> "$GITHUB_OUTPUT"

          if [[ -n "$REPORT" ]] && [[ $(wc -l < "$REPORT") -gt 1 ]]; then
            echo "has_alert=true" >> "$GITHUB_OUTPUT"
            SUMMARY="$(head -n 5 "$REPORT" | tr '\n' ' ' | sed 's/  */ /g')"
            SUMMARY="${SUMMARY:0:900}"
            {
              echo "summary<<EOF"
              echo "$SUMMARY"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
            echo "✅ Alert: rapport gevonden: $REPORT"
          else
            echo "has_alert=false" >> "$GITHUB_OUTPUT"
            echo "summary=" >> "$GITHUB_OUTPUT"
            echo "ℹ️ Geen insider_signals-rapport met data gevonden."
          fi

      - name: Stuur WhatsApp via Twilio (alleen bij alert)
        if: steps.detect.outputs.has_alert == 'true'
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TO: ${{ secrets.ALERT_TO_INSIDER }}
          SUMMARY: ${{ steps.detect.outputs.summary }}
        run: |
          python - <<'PY'
          import os
          from twilio.rest import Client

          sid = os.environ["TWILIO_ACCOUNT_SID"]
          token = os.environ["TWILIO_AUTH_TOKEN"]
          to = os.environ["TO"]
          summary = os.environ.get("SUMMARY","").strip()
          body = ("✅ Insider Monitor: nieuwe signalen. " + summary).strip()

          msg = Client(sid, token).messages.create(
              from_="whatsapp:+14155238886",  # Twilio WhatsApp SANDBOX
              to=to,
              body=body
          )
          print("Verzonden, SID:", msg.sid)
          PY

      - name: Upload rapporten (optioneel)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/**
            *.log
