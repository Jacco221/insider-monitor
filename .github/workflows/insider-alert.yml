name: Insider Alerts (WhatsApp)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/30 * * * *"

jobs:
  alert:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installeer dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install twilio pyyaml

      - name: (Optioneel) config.local.yaml bijwerken met user-agent secret
        run: |
          python - <<'PY'
          import os, yaml
          p = 'config.local.yaml'
          cfg = {}
          if os.path.exists(p):
              cfg = yaml.safe_load(open(p)) or {}
          ua = os.getenv('SEC_USER_AGENT')
          if ua:
              cfg.setdefault('user_agent', {})['ua'] = ua
              yaml.safe_dump(cfg, open(p, 'w'), sort_keys=False, allow_unicode=True)
              print("✅ config.local.yaml geschreven")
          else:
              print("ℹ️  Geen SEC_USER_AGENT secret gezet (mag)")
          PY

      # ------ HIER ZIT DE VERBETERING ------
      - name: Zoek scripts & toon inhoud (auto-discover)
        id: discover
        run: |
          set -euo pipefail

          echo "== Top-level =="
          ls -la

          # Kandidaten waarin 'scripts' kan staan
          for cand in "." "insider-monitor" "src"; do
            if [ -d "$cand/scripts" ]; then
              echo "== Inhoud van $cand/scripts =="
              ls -la "$cand/scripts" || true

              # Probeer veelgebruikte naam-patronen te vinden
              fetch=$(ls "$cand/scripts" | grep -Ei 'fetch.*insider.*\.py' || true)
              score=$(ls "$cand/scripts" | grep -Ei 'score.*signal.*\.py'  || true)
              news=$(ls "$cand/scripts"  | grep -Ei 'fetch.*news.*\.py'    || true)
              report=$(ls "$cand/scripts"| grep -Ei 'report.*builder.*\.py'|| true)

              if [ -n "$fetch" ] && [ -n "$score" ] && [ -n "$news" ] && [ -n "$report" ]; then
                echo "prefix=$cand" >> "$GITHUB_OUTPUT"
                echo "fetch=$fetch" >> "$GITHUB_OUTPUT"
                echo "score=$score" >> "$GITHUB_OUTPUT"
                echo "news=$news"   >> "$GITHUB_OUTPUT"
                echo "report=$report" >> "$GITHUB_OUTPUT"

                echo "== GEVONDEN SCRIPTS =="
                echo "FETCH : $fetch"
                echo "SCORE : $score"
                echo "NEWS  : $news"
                echo "REPORT: $report"
                exit 0
              fi
            fi
          done

          echo "❌ Geen passende scriptbestanden gevonden."
          echo "We zochten op patronen:"
          echo "  fetch.*insider.*.py, score.*signal.*.py, fetch.*news.*.py, report.*builder.*.py"
          echo "Controleer bestandsnamen in de map 'scripts/'."
          exit 1

      - name: Draai insider pipeline
        run: |
          set -e
          cd "${{ steps.discover.outputs.prefix }}"
          python "scripts/${{ steps.discover.outputs.fetch }}"  --days 1 --config ../config.local.yaml
          python "scripts/${{ steps.discover.outputs.score }}"  --config ../config.local.yaml
          python "scripts/${{ steps.discover.outputs.news }}"   --config ../config.local.yaml
          python "scripts/${{ steps.discover.outputs.report }}" --config ../config.local.yaml

      - name: Detecteer nieuwe signalen & bouw samenvatting
        id: report
        run: |
          set -e
          latest=$(ls -1 data/reports/insider_signals_* 2>/dev/null | tail -n1 || true)
          if [ -n "$latest" ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "path=$latest"  >> "$GITHUB_OUTPUT"
            summary=$(head -n 2 "$latest" | tr '\n' ' ')
            echo "summary=$summary" >> "$GITHUB_OUTPUT"
            echo "✅ Rapport gevonden: $latest"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️  Geen nieuw insider_signals_ rapport aangetroffen"
          fi

      - name: Verstuur WhatsApp via Twilio (alleen bij alert)
        if: steps.report.outputs.found == 'true'
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN:  ${{ secrets.TWILIO_AUTH_TOKEN }}
          ALERT_TO_INSIDER:   ${{ secrets.ALERT_TO_INSIDER }}
          BODY: ${{ steps.report.outputs.summary }}
        run: |
          python - <<'PY'
          import os
          from twilio.rest import Client
          sid   = os.environ.get('TWILIO_ACCOUNT_SID')
          token = os.environ.get('TWILIO_AUTH_TOKEN')
          to    = os.environ.get('ALERT_TO_INSIDER')
          body  = os.environ.get('BODY') or "Insider Monitor: nieuwe signalen gedetecteerd."
          assert sid and token and to, "❌ Twilio secrets ontbreken (SID/TOKEN/TO)"
          msg = Client(sid, token).messages.create(
            from_='whatsapp:+14155238886',
            to=to,
            body=body
          )
          print("✅ WhatsApp verzonden, SID:", msg.sid)
          PY

      - name: Upload rapporten (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/data/reports/**
            data/reports/**
