name: Insider Alerts (WhatsApp)

on:
  # Handmatig kunnen starten via Actions (“Run workflow” knop)
  workflow_dispatch: {}
  # Automatisch elke 30 minuten
  schedule:
    - cron: "*/30 * * * *"

jobs:
  alert:
    runs-on: ubuntu-latest

    # ⚠️ Hier mappen we jouw bestaande secretnamen 1-op-1 naar de env variabelen
    env:
      TWILIO_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      WHATSAPP_TO: ${{ secrets.ALERT_TO_INSIDER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installeer dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twilio pyyaml

      - name: Toon repo layout (debug)
        run: |
          set -eux
          pwd
          ls -la
          echo "-----"
          find . -maxdepth 2 -type d -print

      # Zoek dynamisch naar de 'scripts' map (top-level / insider-monitor / src)
      - name: Zoek scripts map
        id: paths
        shell: bash
        run: |
          set -euo pipefail
          found=""
          for p in "." "insider-monitor" "src"; do
            if [ -d "$p/scripts" ]; then
              found="$p/scripts"
              break
            fi
          done
          if [ -z "$found" ]; then
            echo "Kon geen 'scripts' map vinden in ., insider-monitor of src"
            exit 1
          fi
          echo "scripts_dir=$found" >> "$GITHUB_OUTPUT"
          echo "Gevonden scripts map: $found"
          ls -la "$found"

      # Draai (indien aanwezig) de insider scripts — falen niet als een script ontbreekt
      - name: Draai insider pipeline (dummy scripts ok)
        id: run_pipeline
        shell: bash
        run: |
          set -euo pipefail
          SD="${{ steps.paths.outputs.scripts_dir }}"
          echo "Gebruik scripts directory: $SD"

          ran_any=0

          for f in fetch_insiders.py score_signals.py fetch_news.py report_builder.py; do
            if [ -f "$SD/$f" ]; then
              echo "==> run: $f"
              python "$SD/$f" || true
              ran_any=1
            else
              echo "skip: $f niet gevonden"
            fi
          done

          echo "ran_any=$ran_any" >> "$GITHUB_OUTPUT"

      # Heel eenvoudige “detector” — zet op 1 als er iets draaide; vervang later door echte logic
      - name: Detecteer nieuwe signalen & bouw samenvatting
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if [ "${{ steps.run_pipeline.outputs.ran_any }}" = "1" ]; then
            echo "has_alert=1" >> "$GITHUB_OUTPUT"
            echo "summary=Insider Monitor: nieuwe signalen gedetecteerd." >> "$GITHUB_OUTPUT"
          else
            echo "has_alert=0" >> "$GITHUB_OUTPUT"
            echo "summary=Geen nieuwe signalen." >> "$GITHUB_OUTPUT"
          fi

      # Verstuur WhatsApp via Twilio alleen als er een alert is
      - name: Stuur WhatsApp via Twilio (alleen bij alert)
        if: ${{ steps.detect.outputs.has_alert == '1' }}
        shell: bash
        env:
          SID: ${{ env.TWILIO_SID }}
          TOKEN: ${{ env.TWILIO_AUTH_TOKEN }}
          TO: ${{ env.WHATSAPP_TO }}
          BODY: ${{ steps.detect.outputs.summary }}
        run: |
          set -euo pipefail
          python - <<'PY'
          import os, sys
          from twilio.rest import Client

          sid   = os.getenv("SID")
          token = os.getenv("TOKEN")
          to    = os.getenv("TO")
          body  = os.getenv("BODY") or "Insider Monitor alert."

          # Controle op secrets
          missing = [k for k,v in {"SID": sid, "TOKEN": token, "TO": to}.items() if not v]
          if missing:
            print(f"Twilio secrets ontbreken ({', '.join(missing)}).")
            sys.exit(1)

          client = Client(sid, token)
          msg = client.messages.create(
              from_="whatsapp:+14155238886",  # Twilio WhatsApp SANDBOX
              to=to,
              body=body,
          )
          print("✅ WhatsApp verzonden, SID:", msg.sid)
          PY

      # Optioneel: upload eventuele rapporten als artifact
      - name: Upload rapporten (optioneel)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            data/reports/**
          if-no-files-found: ignore
