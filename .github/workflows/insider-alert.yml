name: Insider Alerts (WhatsApp)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"   # elke 30 minuten (UTC)

jobs:
  alert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Prepare config.local.yaml
        env:
          SEC_USER_AGENT: ${{ secrets.SEC_USER_AGENT }}
        run: |
          set -e
          # Als er een config.yaml is, maak een lokale kopie die we kunnen aanpassen
          if [ -f config.yaml ]; then cp -f config.yaml config.local.yaml; fi
          python - <<'PY'
          import os, yaml
          p='config.local.yaml'
          cfg={}
          if os.path.exists(p):
              cfg=yaml.safe_load(open(p)) or {}
          ua=os.getenv('SEC_USER_AGENT')
          if ua:
              cfg.setdefault('user_agent', {})['ua']=ua
          yaml.safe_dump(cfg, open(p,'w'), sort_keys=False, allow_unicode=True)
          print("✅ config.local.yaml geschreven/bijgewerkt")
          PY

      - name: Debug repo layout
        run: |
          echo "PWD: $(pwd)"
          echo "ROOT:"
          ls -la
          echo "SCRIPTS (root):"
          ls -la scripts || true
          echo "SCRIPTS (insider-monitor/):"
          ls -la insider-monitor/scripts || true

      - name: Run insider pipeline
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -e
          if [ -d scripts ]; then BASE=scripts
          elif [ -d insider-monitor/scripts ]; then BASE=insider-monitor/scripts
          else
            echo "❌ Geen scripts/ map gevonden"; exit 2
          fi
          python "$BASE/fetch_insiders.py" --days 1 --config config.local.yaml
          python "$BASE/score_signals.py"   --config config.local.yaml
          python "$BASE/fetch_news.py"      --config config.local.yaml
          python "$BASE/report_builder.py"  --config config.local.yaml

      - name: Detect new signals & build message
        id: buildmsg
        run: |
          set -e
          REPORT_CSV=$(ls -1 data/reports/insider_signals_*.csv 2>/dev/null | tail -n1 || true)
          REPORT_MD=$(ls -1 data/reports/report_*.md 2>/dev/null | tail -n1 || true)

          if [ -n "$REPORT_CSV" ] && [ -s "$REPORT_CSV" ]; then
            MSG="🔥 Insider Monitor: nieuwe signalen gevonden. Zie rapport: ${REPORT_CSV##*/}"
            echo "message=$MSG"       >> "$GITHUB_OUTPUT"
            echo "HAS_ALERT=true"     >> "$GITHUB_OUTPUT"
          elif [ -n "$REPORT_MD" ] && [ -s "$REPORT_MD" ]; then
            MSG="📰 Insider Monitor: nieuw rapport ${REPORT_MD##*/}"
            echo "message=$MSG"       >> "$GITHUB_OUTPUT"
            echo "HAS_ALERT=true"     >> "$GITHUB_OUTPUT"
          else
            echo "message=ℹ️ Insider Monitor: geen nieuwe signalen." >> "$GITHUB_OUTPUT"
            echo "HAS_ALERT=false"    >> "$GITHUB_OUTPUT"
          fi

      - name: Send WhatsApp via Twilio (only if alert)
        if: steps.buildmsg.outputs.HAS_ALERT == 'true'
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN:  ${{ secrets.TWILIO_AUTH_TOKEN }}
          ALERT_TO_INSIDER:   ${{ secrets.ALERT_TO_INSIDER }}
          MSG:                ${{ steps.buildmsg.outputs.message }}
        run: |
          python - <<'PY'
          import os
          from twilio.rest import Client
          sid=os.environ.get("TWILIO_ACCOUNT_SID")
          token=os.environ.get("TWILIO_AUTH_TOKEN")
          to=os.environ.get("ALERT_TO_INSIDER")
          msg_text=os.environ.get("MSG")
          if not (sid and token and to):
              raise SystemExit("❌ Secrets ontbreken (SID/TOKEN/TO)")
          client=Client(sid, token)
          msg = client.messages.create(
              from_="whatsapp:+14155238886",  # Twilio WhatsApp SANDBOX afzender
              to=to,                          # bv. whatsapp:+31652...
              body=msg_text
          )
          print("✅ WhatsApp verzonden! SID:", msg.sid)
          PY

      - name: Upload reports (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: insider-reports
          path: |
            data/reports/**
            data/history/**
