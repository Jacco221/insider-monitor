name: Crypto Pipeline

on:
  workflow_dispatch:
  schedule:
    # 06:00 NL = 04:00 UTC
    - cron: "0 4 * * *"

permissions:
  contents: read

concurrency:
  group: crypto-pipeline-main
  cancel-in-progress: false

env:
  TZ: Europe/Amsterdam
  PYTHONUNBUFFERED: "1"

jobs:
  build-and-publish-reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy requests
          fi

      - name: Create reports folder
        run: mkdir -p data/reports && chmod -R 777 data || true

      - name: Ensure scripts executable
        run: chmod +x scripts/*.sh || true

      # ========== Scores ==========
      - name: Build scores (CoinGecko)
        run: python3 scripts/build_scores.py

      # ========== Scores → Kraken ==========
      - name: Scores → Kraken-only
        run: |
          python3 scripts/filter_kraken.py \
            --scores-csv data/reports/scores_latest.csv \
            --out-csv    data/reports/scores_kraken_latest.csv \
            --out-md     data/reports/scores_kraken_latest.md \
            --quotes USD,EUR,USDT,USDC --top 200 --exclude-top-rank 30 --exclude-bluechips

      # ========== Moonshots v2 (algemeen) ==========
      - name: Moonshots v2 (universe)
        run: |
          python3 scripts/moonshot_v2.py \
            --scores-csv data/reports/scores_latest.csv \
            --out-csv    data/reports/moonshots_v2_latest.csv \
            --out-md     data/reports/moonshots_v2_latest.md \
            --top 10 --exclude-top-rank 30 --exclude-bluechips --quotes USD,EUR,USDT,USDC

      # ========== Moonshots (Kraken-only) ==========
      - name: Moonshots (Kraken-only)
        run: |
          python3 scripts/moonshot_v2.py \
            --scores-csv data/reports/scores_latest.csv \
            --out-csv    data/reports/moonshots_kraken_latest.csv \
            --out-md     data/reports/moonshots_kraken_latest.md \
            --top 10 --exclude-top-rank 30 --exclude-bluechips \
            --kraken-only --quotes USD,EUR,USDT,USDC

      # ========== Regime + cooldown ==========
      - name: Market regime
        run: python3 scripts/annotate_market_regime.py --out-md data/reports/top5_latest.md --window 20 --days 120

      - name: Cooldown guard
        run: python3 scripts/cooldown_guard.py --md data/reports/top5_latest.md

      # ========== Top-5 CSV ==========
      - name: Build Top-5 (CSV)
        run: |
          python3 scripts/build_top5_csv.py \
            --scores-csv data/reports/scores_latest.csv \
            --out-csv    data/reports/top5_latest.csv \
            --exclude-top-rank 30 --exclude-bluechips --top 5
          test -s data/reports/top5_latest.csv && echo "✅ top5_latest.csv aangemaakt"

      # ========== Allocatie ==========
      - name: Advise allocation
        run: |
          if [ ! -s data/reports/top5_latest.csv ]; then
            echo "⚠️  Fallback: maak top5_latest.csv"
            python3 scripts/build_top5_csv.py \
              --scores-csv data/reports/scores_latest.csv \
              --out-csv    data/reports/top5_latest.csv \
              --exclude-top-rank 30 --exclude-bluechips --top 5
          fi
          python3 scripts/advise_allocation.py \
            --top5 data/reports/top5_latest.csv \
            --out  data/reports/allocation_latest.json \
            --append-md --md-file data/reports/top5_latest.md

      # ========== Validatie ==========
      - name: Validate outputs (incl. moonshots)
        run: |
          set -e
          for f in \
            data/reports/scores_kraken_latest.csv \
            data/reports/scores_kraken_latest.md \
            data/reports/moonshots_v2_latest.csv \
            data/reports/moonshots_v2_latest.md \
            data/reports/moonshots_kraken_latest.csv \
            data/reports/moonshots_kraken_latest.md \
            data/reports/top5_latest.csv \
            data/reports/allocation_latest.json
          do
            if [ ! -s "$f" ]; then
              echo "❌ Ontbrekend of leeg: $f"; exit 1
            else
              echo "✅ OK: $f ($(wc -l < "$f" 2>/dev/null || echo 0) regels)"
            fi
          done

      # ========== Artifact ==========
      - name: Upload reports artifact
        uses: actions/upload-artifact@v4
        with:
          name: reports
          if-no-files-found: warn
          retention-days: 7
          path: |
            data/reports/scores_latest.*
            data/reports/top5_latest.*
            data/reports/latest*.*
            data/reports/scores_kraken_latest.*
            data/reports/moonshots_v2_latest.*
            data/reports/moonshots_kraken_latest.*
            data/reports/allocation_latest.json
